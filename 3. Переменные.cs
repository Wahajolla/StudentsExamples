using System;
using System.Collections.Generic;
using System.Text;

namespace StudentsExamples
{
    class Variables
    {

        static void main(string[] args)
        {

            //Объявление переменных
            string name; //Переменная 1
            string Name; //Переменная 2
            name = "Имя!"; //Присвоение переменной















            //Типы данных
            //bool: хранит значение true или false(логические литералы)

            bool alive = true; //Логическое 1
            bool isDead = false;//Логическое 0


            //byte: хранит целое число от 0 до 255 и занимает 1 байт
            byte bit1 = 1; // 
            byte bit2 = 102;


            //sbyte: хранит целое число от -128 до 127 и занимает 1 байт
            sbyte sbit1 = -101;
            sbyte sbit2 = 102;

            //short: хранит целое число от -32768 до 32767 и занимает 2 байта
            short n1 = 1;
            short n2 = 102;


            //ushort: хранит целое число от 0 до 65535 и занимает 2 байта
            ushort un1 = 1;
            ushort un2 = 102;


            /*int: хранит целое число от -2147483648 до 2147483647 и занимает 4 байта.
            Все целочисленные литералы по умолчанию представляют значения типа int:*/
            int a1 = 10;
            int b1 = 0b101;  // бинарная форма b =5
            int c1 = 0xFF;   // шестнадцатеричная форма c = 255

            //uint: хранит целое число от 0 до 4294967295 и занимает 4 байта
            uint a2 = 10;
            uint b2 = 0b101;
            uint c2 = 0xFF;

            //long: хранит целое число от ~-9 трлн до ~9 трлн и занимает 8 байт
            long a3 = -10;
            long b3 = 0b101;
            long c3 = 0xFF;

            //ulong: хранит целое число от 0 до ~18.5 трлн и занимает 8 байт
            ulong a4 = 10;
            ulong b4 = 0b101;
            ulong c4 = 0xFF;


            //Суффиксы 
            //float: хранит число с плавающей точкой от -3.4 * 1038 до 3.4 * 1038 и занимает 4 байта.
            float f = 0.1f;
            //double: хранит число с плавающей точкой от ±5.0*10-324 до ±1.7*10308 и занимает 8 байта.
            double dob = 0.13d;


/*          decimal: хранит десятичное дробное число. Если употребляется без десятичной запятой, имеет значение от 
            ±1.0 * 10 - 28 до ±7.9228 * 1028, 
            может хранить 28 знаков после запятой и занимает 16 байт*/
            decimal c = 1005.8M;
            decimal d = 334.8m;


            //Еще типы данных

/*           char: хранит одиночный символ в кодировке Unicode и занимает 2 байта.
            Представлен системным типом System.Char.Этому типу соответствуют символьные литералы:*/
            char char1 = 'A';
            char char2 = '\x5A';
            char char3 = '\u0420';

            //string: хранит набор символов Unicode.
            string hello = "Hello";
            string world = "world";

            /*object: может хранить значение любого типа данных и занимает 4 байта на 32-разрядной платформе 
            и 8 байт на 64-разрядной платформе*/

            object o1 = 22;
            object o2 = 3.14;
            object o3 = "hello code";





            //Константы 
            const double PI = 3.14;
            const double E = 2.71;
            const double F; // Ошибка, константа не инициализирована

            E = 12;// Ошибка, значение константы нельзя изменить






            //Литералы
            Console.WriteLine(-11); // Целочисленные литералы - числа
            Console.WriteLine(0b1011); // Целочисленные литералы - числа в двоичной форме
            Console.WriteLine(3.14); // Вещественные литералы - вещественные числа
            Console.WriteLine(3.2e3); // Вещественные литералы в научной записи - вещественные числа, записанные в спец. форме.
            //3.2e3 = 3.2 * 10^3 = 3200
            Console.WriteLine('2'); //Символьные литералы


            //Управляющие последовательности
            Console.Write('\n'); // Символ перехода на следующую строку. 
            Console.WriteLine(""); // Тоже самое, что строчка сверху. 
            Console.WriteLine('\t'); // Знак табуляции. 

            //
            string nullString = null;
        }


    }
}
